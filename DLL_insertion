class DoublyLinkedList {
	static class Node {
		int data;
		Node prev;
		Node next;

		Node(int data) {
			this.data = data;
			this.prev = null;
			this.next = null;
		}
	}

	private Node head;

	public DoublyLinkedList() {
		head = null;
	}

	public void insertAtBeginning(int data) {
		Node newNode = new Node(data);
		if (head == null) {
			head = newNode;
		} else {
			newNode.next = head;
			head.prev = newNode;
			head = newNode;
		}
	}

	public void insertAtEnd(int data) {
		Node newNode = new Node(data);
		if (head == null) {
			head = newNode;
		} else {
			Node temp = head;
			while (temp.next != null) {
				temp = temp.next;
			}
			temp.next = newNode;
			newNode.prev = temp;
		}
	}

	public void insertAtPosition(int data, int position) {
		if (position < 1) {
			System.out.println("Invalid position.");
			return;
		}

		Node newNode = new Node(data);
		if (position == 1) {
			insertAtBeginning(data);
			return;
		}

		Node temp = head;
		int currentPosition = 1;

		while (temp != null && currentPosition < position - 1) {
			temp = temp.next;
			currentPosition++;
		}

		if (temp == null) {
			System.out.println("Position exceeds list length. Inserting at the end.");
			insertAtEnd(data);
		} else {
			newNode.next = temp.next;
			if (temp.next != null) {
				temp.next.prev = newNode;
			}
			temp.next = newNode;
			newNode.prev = temp;
		}
	}

	public void display() {
		if (head == null) {
			System.out.println("The list is empty.");
			return;
		}

		Node temp = head;
		while (temp != null) {
			System.out.print(temp.data + " ");
			temp = temp.next;
		}
		System.out.println();
	}

	public static void main(String[] args) {
		DoublyLinkedList list = new DoublyLinkedList();

		list.insertAtBeginning(10);
		list.insertAtBeginning(5);
		list.insertAtEnd(15);
		list.insertAtEnd(20);

		System.out.println("List after insertions at the beginning and end:");
		list.display();

		list.insertAtPosition(12, 3);
		list.insertAtPosition(25, 6);

		System.out.println("List after inserting at specific positions:");
		list.display();
	}
}
